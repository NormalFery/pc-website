@use 'badges';
@use 'colors';

$header-size: 2.5rem;
$border-radius: 0.5rem;

:root {
	font-family: 'ABeeZee', sans-serif;
}

body {
	margin: 0;
}

svg,
img,
video {
	width: auto;
	height: auto;
	max-width: 100%;
	max-height: 100%;
}

main {
	max-width: min(1000px, 70vw);
	margin: auto;

	@media (max-width: 1000px) {
		max-width: 100vw;
		padding: 0 5px;
	}
}

header {
	display: flex;
	flex-direction: row;

	font-size: 2rem;

	padding: 0.5rem 4rem;

	@media (max-width: 1000px) {
		padding: 0.5rem 5px;
	}

	.grow {
		margin: auto;
	}

	li {
		list-style-type: none;
	}

	a {
		text-decoration: none;
		white-space: nowrap;
		color: inherit;
		border-radius: $border-radius;

		padding: 0.1rem 0.4rem;

		&:hover {
			background-color: var(--surface1);
		}
	}

	svg,
	img {
		width: 1.5em;
		aspect-ratio: 1;
		border-radius: $border-radius;
	}

	> nav {
		display: flex;
		flex-direction: row;
		gap: 0.5rem;

		> * {
			display: flex;
			flex-direction: row;
			align-items: center;
		}
	}
}

.popup {
	position: relative;
	display: inline-block;

	> span {
		transition:
			background-color var(--transition-time),
			color var(--transition-time);
		display: flex;
		flex-direction: row;
		align-items: center;
		cursor: pointer;

		padding-left: 0.4rem;
		border-radius: $border-radius $border-radius 0 0;

		> svg {
			transition: rotate var(--rotate-time);
		}
	}

	> :last-child {
		transition:
			opacity var(--transition-time),
			visibility var(--transition-time);
		opacity: 0;
		visibility: hidden;
		position: absolute;
		right: 0;

		width: max-content;

		background-color: var(--surface1);
		margin: 0;
		padding: 0.25rem;
		border-radius: $border-radius;
		border-top-right-radius: 0;
	}

	a {
		display: block;

		&:hover {
			background-color: var(--surface2);
		}
	}

	&:hover > span {
		background-color: var(--surface1);
		color: var(--link-hover);

		> svg {
			rotate: 90deg;
		}
	}

	&:hover > :last-child {
		opacity: 1;
		visibility: visible;
	}
}

.logo,
a.logo {
	display: flex;
	flex-direction: row;
	align-items: center;

	gap: 0.4rem;
	padding: 0 0.4rem 0 0;

	border-radius: 1.3em $border-radius $border-radius 1.3em;

	> svg {
		transition: rotate var(--rotate-time);
		border-radius: 100%;
		width: 1.3em;
	}
}

.logo:hover svg {
	rotate: 45deg;
	@media (prefers-reduced-motion: reduce) {
		rotate: unset;
	}
}

#logo {
	font-weight: 600;

	@media (max-width: 640px) {
		display: none;
	}
}

.gallery {
	> * {
		width: 100%;
		aspect-ratio: 16/9;

		picture {
			width: 100%;
			height: 100%;
		}
	}

	// Mobile quirks mode
	img,
	svg,
	video {
		width: 100%;
	}

	*:not(source) {
		display: block;
	}

	@media (min-width: 640px) {
		display: flex;
		flex-flow: row wrap;
		gap: 4px;

		> * {
			width: calc(50% - 2px);
		}

		> :first-child,
		&.prioritize-2 > :is(:nth-child(2), :last-child:nth-child(2n + 1)),
		&:not(.prioritize-2) > :last-child:nth-child(2n + 2) {
			width: 100%;
		}
	}
}

.video {
	position: relative;
	> * {
		position: absolute;
		display: block;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		border: unset;
	}
}

.shields {
	display: flex;
	flex-flow: wrap;
	flex-direction: row;
	justify-content: center;

	gap: 0.25em;

	* {
		display: block;
	}

	img,
	svg {
		// Epiphany quirk: For some reason the CurseForge shield badge behaves incorrectly with
		// `max-width: 100%; height: auto;`. It sets the height to just less than 28px, causing
		// it to resize the image to be less than the native width, coercing it to fit to 28px height anyways.
		max-width: unset;
		max-height: unset;
	}
}

.badges {
	display: flex;
	flex-flow: wrap;
	flex-direction: row;
	justify-content: center;
	gap: 0.5em;
	padding: 0;

	img {
		display: block;
		margin: 0;
		/*
		FAQ:
			Q: Why not <insert options here>?
			A: Because it doesn't respect height="56".
		*/
		height: 56px;
	}

	li {
		list-style-type: none;
		block-size: fit-content;
		margin: 0;
	}

	@media (max-width: 640px) {
		.badge > span {
			> :first-child {
				margin: calc(28px - (var(--icon) / 2));
			}

			> span {
				display: none;
			}
		}
	}
}

/* I'm sure this is intended */
.badge {
	font-family: 'Inter', Arial, FreeSans, sans-serif;
	color: #eaeaea;

	display: block;
	width: auto;
	max-width: fit-content;
	height: 56px;
	/*padding: 2px; /**/
	border-radius: 8px;
	background: var(--fill); /* --border; */
	text-decoration: none;

	--icon: 40px;

	> span {
		transition: border-color var(--transition-time);
		/*background: var(--fill);*/
		border-radius: 8px; /*/ 6px; /**/
		border: 2px solid #ffffff26; /**/
		width: calc(100% - 4px);
		height: calc(100% - 4px);
		display: flex;
		align-items: center;
		flex-direction: row;
		flex-basis: fit-content;
		/* padding: 0 10px;*/
		// gap: 8px;
		gap: calc(28px - (var(--icon) / 2));

		> span {
			display: flex block;
			flex-direction: column;
			flex-shrink: 2;
			line-height: 18px;
			text-shadow: 0 0 5px #0000004f;
			white-space: nowrap;
			* {
				margin: 0 !important;
			}
		}

		/**
		 * Fixes a rendering bug in Firefox where the
		 * shadow doesn't cross the div boundary.
		 *
		 * This essentially makes the image and sub-div forcefully
		 * grow the parent div rather than relying on padding to
		 * do so correctly.
		 */
		> :first-child {
			//margin-left: 10px;
			margin-left: calc(30px - (var(--icon) / 2));
		}

		> :last-child {
			margin-right: 10px;
		}

		&:hover {
			border-color: var(--overlay1);
		}
	}
	img,
	svg {
		display: block;
		block-size: var(--icon);
		max-width: var(--icon);
		max-height: var(--icon);
		border-radius: 8px;
		filter: drop-shadow(0 0 5px #0000004f);
		background: var(--icon-fill);
		/*box-shadow: 0 0 5px 0 #0000004F;*/
	}
}

.reader-only {
	display: none;
}
